# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push  pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
name: Test Build

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Release Apk Sign
        run: |
          if [ -n "${{ secrets.RELEASE_KEY_ALIAS }}" ] && [ -n "${{ secrets.RELEASE_STORE_PASSWORD }}" ] && [ -n "${{ secrets.RELEASE_KEY_PASSWORD }}" ]; then
            cp -f $GITHUB_WORKSPACE/.github/workflows/TVBoxOSC.jks $GITHUB_WORKSPACE/app/TVBoxOSC.jks
            sed -i '$a\RELEASE_STORE_FILE=./TVBoxOSC.jks'                             $GITHUB_WORKSPACE/gradle.properties
            sed -i "$a\RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}"            $GITHUB_WORKSPACE/gradle.properties
            sed -i "$a\RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}"  $GITHUB_WORKSPACE/gradle.properties
            sed -i "$a\RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}"      $GITHUB_WORKSPACE/gradle.properties
          fi
      - name: Build With Gradle
        run: |
          chmod +x gradlew
          ./gradlew assemblerelease --build-cache --parallel --daemon --warning-mode all
      - name: Prepare App
        run: |
          mkdir -p ${{ github.workspace }}/apk/
          for file in `find ~ -name "*.apk" -print`; do
            mv "$file" ${{ github.workspace }}/apk/
          done
      - name: Upload App To Artifact
        uses: actions/upload-artifact@v3
        with:
          name: com.github.tvbox.osc
          path: ${{ github.workspace }}/apk/*
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
