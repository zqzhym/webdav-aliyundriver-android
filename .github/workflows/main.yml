# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
name: Build and Release

on:

 push:

   branches:

     - master

     - "feature/*"

   tags:

     - "v*.*.*"

 pull_request:

   branches:

     - master

     - "feature/*"

jobs:

 apk:

   name: Generate APK

   runs-on: ubuntu-latest

   steps:

     - name: Checkout

       uses: actions/checkout@v2.4.0

     - name: Branch name

       run: echo running on branch ${GITHUB_REF##*/}

     - name: Setup JDK

       uses: actions/setup-java@v2.5.0

       with:

         distribution: temurin

         java-version: "11"

     - name: Set execution flag for gradlew

       run: chmod +x gradlew

     - name: Build APK

       run: bash ./gradlew assembleDebug --stacktrace

     - name: Upload APK

       uses: actions/upload-artifact@v1

       with:

         name: apk

         path: app/build/outputs/apk/debug/app-debug.apk

 release:

   name: Release APK

   needs: apk

   runs-on: ubuntu-latest

   steps:

     - name: Get branch name

       id: branch-name

       uses: tj-actions/branch-names@v5.1

     - name: Print branch    

       run: |

         echo "Running on default: ${{ steps.branch-name.outputs.current_branch }}"

       

     - name: Download APK from build

       uses: actions/download-artifact@v1

       with:

         name: apk

     - name: Create Release

       id: create_release

       uses: actions/create-release@v1

       env:

         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

       with:

         tag_name: ${{ github.run_number }}

         release_name: ${{ github.event.repository.name }}  ${{ steps.branch-name.outputs.current_branch }} v${{ github.run_number }}.${{ github.run_attempt }}

     - name: Upload Release APK

       id: upload_release_asset

       uses: actions/upload-release-asset@v1.0.1

       env:

         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

       with:

         upload_url: ${{ steps.create_release.outputs.upload_url }}

         asset_path: apk/app-debug.apk

         asset_name: ${{ github.event.repository.name }}  ${{ steps.branch-name.outputs.current_branch }} v${{ github.run_number }}.${{ github.run_attempt }}.apk

         asset_content_type: application/zip
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
